{"ast":null,"code":"var _jsxFileName = \"/Users/bernadettekebirungi/todo-app/todo-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport APIHelper from \"../../todo-frontend/APIHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  useEffect(() => {\n    const fetchTodoAndSetTodos = async () => {\n      const todos = await APIHelper.getAllTodos();\n      setTodos(todos);\n    };\n\n    fetchTodoAndSetTodos();\n  }, []);\n\n  const createTodo = async e => {\n    e.preventDefault();\n\n    if (!todo) {\n      alert(\"please enter something\");\n      return;\n    }\n\n    if (todos.some(_ref => {\n      let {\n        task\n      } = _ref;\n      return task === todo;\n    })) {\n      alert(`Task: ${todo} already exists`);\n      return;\n    }\n\n    const newTodo = await APIHelper.createTodo(todo);\n    setTodos([...todos, newTodo]);\n  };\n\n  const deleteTodo = async (e, id) => {\n    try {\n      e.stopPropagation();\n      await APIHelper.deleteTodo(id);\n      setTodos(todos.filter(_ref2 => {\n        let {\n          _id: i\n        } = _ref2;\n        return id !== i;\n      }));\n    } catch (err) {}\n  };\n\n  const updateTodo = async (e, id) => {\n    e.stopPropagation();\n    const payload = {\n      completed: !todos.find(todo => todo._id === id).completed\n    };\n    const updatedTodo = await APIHelper.updateTodo(id, payload);\n    setTodos(todos.map(todo => todo._id === id ? updatedTodo : todo));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"todo-input\",\n        type: \"text\",\n        value: todo,\n        onChange: _ref3 => {\n          let {\n            target\n          } = _ref3;\n          return setTodo(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: createTodo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((_ref4, i) => {\n        let {\n          _id,\n          task,\n          completed\n        } = _ref4;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: e => updateTodo(e, _id),\n          className: completed ? \"completed\" : \"\",\n          children: [task, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: e => deleteTodo(e, _id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 20\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yk5WshbaLT5gJV9YCVOZUJpms7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bernadettekebirungi/todo-app/todo-frontend/src/App.js"],"names":["React","useState","useEffect","APIHelper","App","todos","setTodos","todo","setTodo","fetchTodoAndSetTodos","getAllTodos","createTodo","e","preventDefault","alert","some","task","newTodo","deleteTodo","id","stopPropagation","filter","_id","i","err","updateTodo","payload","completed","find","updatedTodo","map","target","value"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\"\nimport \"./App.css\"\nimport APIHelper from \"../../todo-frontend/APIHelper\"\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const [todo, setTodo] = useState(\"\")\n\n  useEffect(() => {\n    const fetchTodoAndSetTodos = async () => {\n      const todos = await APIHelper.getAllTodos()\n      setTodos(todos)\n    }\n    fetchTodoAndSetTodos()\n  }, [])\n\n  const createTodo = async e => {\n    e.preventDefault()\n    if (!todo) {\n      alert(\"please enter something\")\n      return\n    }\n    if (todos.some(({ task }) => task === todo)) {\n      alert(`Task: ${todo} already exists`)\n      return\n    }\n    const newTodo = await APIHelper.createTodo(todo)\n    setTodos([...todos, newTodo])\n  }\n\n  const deleteTodo = async (e, id) => {\n    try {\n      e.stopPropagation()\n      await APIHelper.deleteTodo(id)\n      setTodos(todos.filter(({ _id: i }) => id !== i))\n    } catch (err) {}\n  }\n\n  const updateTodo = async (e, id) => {\n    e.stopPropagation()\n    const payload = {\n      completed: !todos.find(todo => todo._id === id).completed,\n    }\n    const updatedTodo = await APIHelper.updateTodo(id, payload)\n    setTodos(todos.map(todo => (todo._id === id ? updatedTodo : todo)))\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <input\n          id=\"todo-input\"\n          type=\"text\"\n          value={todo}\n          onChange={({ target }) => setTodo(target.value)}\n        />\n        <button type=\"button\" onClick={createTodo}>\n          Add\n        </button>\n      </div>\n\n      <ul>\n        {todos.map(({ _id, task, completed }, i) => (\n          <li\n            key={i}\n            onClick={e => updateTodo(e, _id)}\n            className={completed ? \"completed\" : \"\"}\n          >\n            {task} <span onClick={e => deleteTodo(e, _id)}>X</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}